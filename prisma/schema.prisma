generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Game {
  id           String      @id @default(cuid())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  name         String
  version      String
  currentDay   Int
  currentMonth Int
  gameFile     String
  mapImage     String?
  events       GameEvent[]
  htmlFiles    HtmlFile[]
  images       Image[]
  players      Player[]
  turns        Turn[]
  gameLogs     GameLog[]
}

model Player {
  id            String      @id @default(cuid())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  name          String
  character     String
  characterType String
  location      String?
  gameId        String
  events        GameEvent[]
  game          Game        @relation(fields: [gameId], references: [id])
  turns         Turn[]
}

model Turn {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  day       Int
  month     Int
  phase     String
  actions   String
  playerId  String
  gameId    String
  game      Game     @relation(fields: [gameId], references: [id])
  player    Player   @relation(fields: [playerId], references: [id])
}

model GameEvent {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  type        String
  description String
  day         Int
  month       Int
  gameId      String
  playerId    String?
  player      Player?  @relation(fields: [playerId], references: [id])
  game        Game     @relation(fields: [gameId], references: [id])
}

model HtmlFile {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  path      String
  type      String
  gameId    String
  game      Game     @relation(fields: [gameId], references: [id])
}

model Image {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  path      String
  type      String
  gameId    String
  game      Game     @relation(fields: [gameId], references: [id])
}

model Character {
  id                String  @id @default(cuid())
  slug              String  @unique
  name              String  @unique
  description       String?
  iconFolder        String?
  characterChit     String?
  stage             Int?
  characterPortrait String?
  characterSymbol   String?
  vulnerability     String?
  startLocation     String?
  pronoun           String?
  facing            String?
  meaning           String?
  creator           String?
  artCredit         String?
  advantages        String?
  startingItems     String?
  relationships     String?
  levels            String?
  spellcount        Int?
}

model Item {
  id            String      @id @default(cuid())
  name          String      @unique
  type          String?
  vulnerability String?
  weight        String?
  magic         String?
  length        String?
  basePrice     Int?
  sharpness     String?
  iconType      String?
  fame          Int?
  notoriety     Int?
  text          String?
  treasure      String?
  states        ItemState[]
}

model ItemState {
  id            String  @id @default(cuid())
  itemId        String
  state         String
  strength      String?
  sharpness     String?
  color         String?
  attackSpeed   String?
  basePrice     Int?
  vulnerability String?
  fame          Int?
  notoriety     Int?
  item          Item    @relation(fields: [itemId], references: [id])
}

model Chit {
  id          String  @id @default(cuid())
  name        String  @unique
  description String?
}

model Monster {
  id               String  @id @default(cuid())
  monsterId        Int     @unique
  name             String
  type             String?
  group            String?
  native           String?
  move             String?
  lightMoveSpeed   String?
  lightAttackSpeed String?
  lightStrength    String?
  lightChitColor   String?
  lightPins        String?
  darkMoveSpeed    String?
  darkAttackSpeed  String?
  darkStrength     String?
  darkChitColor    String?
  darkPins         String?
  warning          String?
  weight           String?
  fame             Int?
  notoriety        Int?
  gold             Int?
  treasure         String?
  containsIds      String?
  portrait         String?
  killCount        Int?
  baseName         String?
  containedById    Int?
  setupStart       String?
  armored          Int?
  vulnerability    String?
}

model Native {
  id               String  @id @default(cuid())
  nativeId         Int     @unique
  name             String
  baseName         String?
  type             String?
  group            String?
  native           String?
  move             String?
  lightMoveSpeed   String?
  lightAttackSpeed String?
  lightStrength    String?
  lightChitColor   String?
  lightPins        String?
  darkMoveSpeed    String?
  darkAttackSpeed  String?
  darkStrength     String?
  darkChitColor    String?
  darkPins         String?
  warning          String?
  weight           String?
  fame             Int?
  notoriety        Int?
  gold             Int?
  treasure         String?
  containsIds      String?
  portrait         String?
  killCount        Int?
  setupStart       String?
  containedById    Int?
  vulnerability    String?
  armored          Int?
  dwelling         String?
  sides            String?
  description      String?
  strategies       String?
  basePrice        Int?
}

model GameLog {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  gameId      String
  filename    String
  logType     String?
  turnNumber  Int?
  characterId String?
  data        String
  game        Game     @relation(fields: [gameId], references: [id])
}
